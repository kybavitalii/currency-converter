{"version":3,"sources":["HeaderElement.js","InputElement.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderElement","React","Component","InputElement","type","value","this","props","amount","onChange","event","onAmountChange","target","currency","onCurrencyChange","currencies","map","index","App","state","amount1","amount2","currency1","currency2","rates","handleAmount1Change","bind","handleAmount2Change","handleCurrency1Change","handleCurrency2Change","axios","get","then","response","obj","data","forEach","elem","cc","rate","setState","number","toFixed","format","className","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAEMA,E,4JACJ,WACE,OACE,4B,GAHsBC,IAAMC,WAwBnBF,ICxBTG,E,4JAEJ,WAAU,IAAD,OACP,OACE,gCACE,uBACEC,KAAK,SACLC,MAAOC,KAAKC,MAAMC,OAClBC,SAAU,SAACC,GAAD,OAAW,EAAKH,MAAMI,eAAeD,EAAME,OAAOP,UAE9D,wBACEA,MAAOC,KAAKC,MAAMM,SAClBJ,SAAU,SAACC,GAAD,OAAW,EAAKH,MAAMO,iBAAiBJ,EAAME,OAAOP,QAFhE,SAIGC,KAAKC,MAAMQ,WAAWC,KAAI,SAACH,EAAUI,GAAX,OACzB,wBAAoBZ,MAAOQ,EAA3B,SACGA,GADUI,e,GAfEhB,IAAMC,WAyBlBC,IC8GAe,E,kDAlIb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,EACTC,QAAS,EACTC,UAAW,MACXC,UAAW,MACXC,MAAO,IAET,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKG,sBAAwB,EAAKA,sBAAsBH,KAA3B,gBAZZ,E,qDAenB,WAAqB,IAAD,OAClBI,IACGC,IACC,wEAEDC,MAAK,SAACC,GACL,IAAMC,EAAM,CAAEV,MAAO,IACrBU,EAAIV,MAAJ,IAAmB,EACnBS,EAASE,KAAKC,SAAQ,SAACC,GACrBH,EAAIV,MAAMa,EAAKC,IAAMD,EAAKE,QAG5B,EAAKC,UAAS,iBAAO,CACnBhB,MAAOU,EAAIV,e,gCAInB,WAAsB,IAAD,OACnBM,IACGC,IACC,wEAEDC,MAAK,SAACC,GACL,IAAMC,EAAM,CAAEV,MAAO,IACrBU,EAAIV,MAAJ,IAAmB,EACnBS,EAASE,KAAKC,SAAQ,SAACC,GACrBH,EAAIV,MAAMa,EAAKC,IAAMD,EAAKE,QAG5B,EAAKC,UAAS,iBAAO,CACnBhB,MAAOU,EAAIV,e,oBAKnB,SAAOiB,GACL,OAAOA,EAAOC,QAAQ,K,iCAGxB,SAAoBtB,GAAU,IAAD,OAC3Bd,KAAKkC,UAAS,iBAAO,CACnBnB,QAAS,EAAKsB,OACXvB,EAAU,EAAKD,MAAMK,MAAM,EAAKL,MAAMG,WACrC,EAAKH,MAAMK,MAAM,EAAKL,MAAMI,gBAGlCjB,KAAKkC,UAAS,iBAAO,CACnBpB,QAASA,Q,mCAIb,SAAsBE,GAAY,IAAD,OAC/BhB,KAAKkC,UAAS,iBAAO,CACnBnB,QAAS,EAAKsB,OACX,EAAKxB,MAAMC,QAAU,EAAKD,MAAMK,MAAM,EAAKL,MAAMI,WAChD,EAAKJ,MAAMK,MAAMF,QAGvBhB,KAAKkC,UAAS,iBAAO,CACnBlB,UAAWA,Q,iCAIf,SAAoBD,GAAU,IAAD,OAC3Bf,KAAKkC,UAAS,iBAAO,CACnBpB,QAAS,EAAKuB,OACXtB,EAAU,EAAKF,MAAMK,MAAM,EAAKL,MAAMI,WACrC,EAAKJ,MAAMK,MAAM,EAAKL,MAAMG,gBAGlChB,KAAKkC,UAAS,iBAAO,CACnBnB,QAASA,Q,mCAIb,SAAsBE,GAAY,IAAD,OAC/BjB,KAAKkC,UAAS,iBAAO,CACnBpB,QAAS,EAAKuB,OACX,EAAKxB,MAAME,QAAU,EAAKF,MAAMK,MAAM,EAAKL,MAAMG,WAChD,EAAKH,MAAMK,MAAMD,QAGvBjB,KAAKkC,UAAS,iBAAO,CACnBjB,UAAWA,Q,oBAIf,WACE,OACE,sBAAKqB,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,aAAf,UACE,oDACA,cAAC,EAAD,CACEjC,eAAgBL,KAAKmB,oBACrBX,iBAAkBR,KAAKsB,sBACvBb,WAAY8B,OAAOC,KAAKxC,KAAKa,MAAMK,OACnChB,OAAQF,KAAKa,MAAMC,QACnBP,SAAUP,KAAKa,MAAMG,YAEvB,cAAC,EAAD,CACEX,eAAgBL,KAAKqB,oBACrBb,iBAAkBR,KAAKuB,sBACvBd,WAAY8B,OAAOC,KAAKxC,KAAKa,MAAMK,OACnChB,OAAQF,KAAKa,MAAME,QACnBR,SAAUP,KAAKa,MAAMI,sB,GA3HftB,IAAMC,WCMT6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1e119c81.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass HeaderElement extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <input\r\n          type=\"string\"\r\n          value={this.props.amount}\r\n          onChange={(event) => this.props.onAmountChange(event.target.value)}\r\n        />\r\n        <select\r\n          value={this.props.currency}\r\n          onChange={(event) => this.props.onCurrencyChange(event.target.value)}\r\n        >\r\n          {this.props.currencies.map((currency, index) => (\r\n            <option key={index} value={currency}>\r\n              {currency}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderElement;\r\n","import React from 'react';\r\n\r\nclass InputElement extends React.Component {\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"string\"\r\n          value={this.props.amount}\r\n          onChange={(event) => this.props.onAmountChange(event.target.value)}\r\n        />\r\n        <select\r\n          value={this.props.currency}\r\n          onChange={(event) => this.props.onCurrencyChange(event.target.value)}\r\n        >\r\n          {this.props.currencies.map((currency, index) => (\r\n            <option key={index} value={currency}>\r\n              {currency}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputElement;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport HeaderElement from './HeaderElement';\r\nimport InputElement from './InputElement';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      amount1: 1,\r\n      amount2: 1,\r\n      currency1: 'USD',\r\n      currency2: 'UAH',\r\n      rates: [],\r\n    };\r\n    this.handleAmount1Change = this.handleAmount1Change.bind(this);\r\n    this.handleAmount2Change = this.handleAmount2Change.bind(this);\r\n    this.handleCurrency1Change = this.handleCurrency1Change.bind(this);\r\n    this.handleCurrency2Change = this.handleCurrency2Change.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchangenew?json'\r\n      )\r\n      .then((response) => {\r\n        const obj = { rates: {} };\r\n        obj.rates['UAH'] = 1;\r\n        response.data.forEach((elem) => {\r\n          obj.rates[elem.cc] = elem.rate;\r\n        });\r\n\r\n        this.setState(() => ({\r\n          rates: obj.rates,\r\n        }));\r\n      });\r\n  }\r\n  componentDidUpdate() {\r\n    axios\r\n      .get(\r\n        'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchangenew?json'\r\n      )\r\n      .then((response) => {\r\n        const obj = { rates: {} };\r\n        obj.rates['UAH'] = 1;\r\n        response.data.forEach((elem) => {\r\n          obj.rates[elem.cc] = elem.rate;\r\n        });\r\n\r\n        this.setState(() => ({\r\n          rates: obj.rates,\r\n        }));\r\n      });\r\n  }\r\n\r\n  format(number) {\r\n    return number.toFixed(4);\r\n  }\r\n\r\n  handleAmount1Change(amount1) {\r\n    this.setState(() => ({\r\n      amount2: this.format(\r\n        (amount1 * this.state.rates[this.state.currency1]) /\r\n          this.state.rates[this.state.currency2]\r\n      ),\r\n    }));\r\n    this.setState(() => ({\r\n      amount1: amount1,\r\n    }));\r\n  }\r\n\r\n  handleCurrency1Change(currency1) {\r\n    this.setState(() => ({\r\n      amount2: this.format(\r\n        (this.state.amount1 * this.state.rates[this.state.currency2]) /\r\n          this.state.rates[currency1]\r\n      ),\r\n    }));\r\n    this.setState(() => ({\r\n      currency1: currency1,\r\n    }));\r\n  }\r\n\r\n  handleAmount2Change(amount2) {\r\n    this.setState(() => ({\r\n      amount1: this.format(\r\n        (amount2 * this.state.rates[this.state.currency2]) /\r\n          this.state.rates[this.state.currency1]\r\n      ),\r\n    }));\r\n    this.setState(() => ({\r\n      amount2: amount2,\r\n    }));\r\n  }\r\n\r\n  handleCurrency2Change(currency2) {\r\n    this.setState(() => ({\r\n      amount1: this.format(\r\n        (this.state.amount2 * this.state.rates[this.state.currency1]) /\r\n          this.state.rates[currency2]\r\n      ),\r\n    }));\r\n    this.setState(() => ({\r\n      currency2: currency2,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"header\">\r\n          <HeaderElement />\r\n        </div>\r\n        <div className=\"inputField\">\r\n          <h1>Currency Converter</h1>\r\n          <InputElement\r\n            onAmountChange={this.handleAmount1Change}\r\n            onCurrencyChange={this.handleCurrency1Change}\r\n            currencies={Object.keys(this.state.rates)}\r\n            amount={this.state.amount1}\r\n            currency={this.state.currency1}\r\n          />\r\n          <InputElement\r\n            onAmountChange={this.handleAmount2Change}\r\n            onCurrencyChange={this.handleCurrency2Change}\r\n            currencies={Object.keys(this.state.rates)}\r\n            amount={this.state.amount2}\r\n            currency={this.state.currency2}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}